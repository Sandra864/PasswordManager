@page "/ManageUsers"

<PageTitle>Manage Users</PageTitle>

@using BlazorApp.Data
@using Microsoft.AspNetCore.Identity;
@inject IUserService IUserService;

<AuthorizeView>
    <Authorized>
<h1>Manage Users</h1>

 <NavLink href="Identity/Account/Register" class="btn btn-sm btn-success mb-2">Add User</NavLink>
        @if (users == null)
        {
                    <p><em>Loading...</em></p>
        }
        else
        {
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th style="width: 30%">First Name</th>
                                <th style="width: 30%">Last Name</th>
                                <th style="width: 30%">Email</th>
                                <th style="width: 20%"></th>
                            </tr>
                        </thead>
                        <tbody>
                    @foreach (var user in users)
                    {
                        <tr>
                            <td>@user.FirstName</td>
                            <td>@user.LastName</td>
                            <td>@user.Email</td>
                            <td style="white-space: nowrap">
                            <NavLink  href="Identity/Account/Manage/ChangePassword" class="btn btn-sm btn-secondary mr-1">Change Password</NavLink>
                            <NavLink  href="@($"users/edit/{user.Id}")" class="btn btn-sm btn-primary mr-1">Edit</NavLink>
                            <button @onclick="@(() => DeleteUser(user.Id))" class="btn btn-sm btn-danger btn-delete-user">    
                                        <span>Delete</span>
                            </button>
                            </td>
                        </tr>
                    }
                        </tbody>
                    </table>
        }
    </Authorized>
     <NotAuthorized>
        <p>You're not signed in.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    private List<UserViewModel> users;

    protected override async Task OnInitializedAsync()
    {
        users = await IUserService.GetUsers();
    }
    private async void DeleteUser(string id) 
    {
        await IUserService.DeleteUser(id);
        var userRemoved = users.First(x => x.Id == id);
        users.Remove(userRemoved);
        StateHasChanged();
    }
}
